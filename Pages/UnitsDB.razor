@page "/unitsDB"

@using ShipSelector.Services.UnitsandListsServiceClient
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@inject IWebAssemblyHostEnvironment Env

@inject IUnitsandListsServiceClient ULSC
@inject NavigationManager NM
@inject ILogger<Index> _logger;

    @* This page shouldnt be visible in prod *@
<div  hidden="@Env.IsProduction()">

<h3>List of all units in the database</h3>
<div class="btn-group" role="group" aria-label="Basic example">
    <button type="button" @onclick="() => AddUnit()" class="btn btn-secondary fa fa-plus"> Add unit to Database</button>
</div>


    @if(listOfUnitsWIthGSDetail == null || listOfUnitsWIthGSDetail.Count == 0)
{
    <span>Loading Units</span>
}

   <table class="table table-striped table-bordered">
       
        <thead class="thead-dark">

                <tr>
                    <th scope="col">Country</th>

                    <th scope="col">Type</th>
                    <th scope="col">Class</th>
                    <th scope="col">Names</th>
                    <th scope="col" style="width:20%;">Games added too</th>
                    <th scope="col">Edit/Delete</th>
                </tr>

        </thead>
 <tbody>
@foreach (var u in listOfUnitsWIthGSDetail)
{
    <tr>

      <td>@u.Unit.Country.CountryName</td>
      <td>@u.Unit.SubUnitType.SubUnitName</td>
      <td>@u.Unit.Name_ClassName</td>
      <td>@u.Unit.ShipsSubsInClass</td>
      <td>

            @foreach (var gs in @u.GameSpecificDetailList)
            {
                <p>@gs.Ruleset.RulesetName.</p>
            }

   </td>
     
      <td><a href="/addEditDeleteUnit/@u.Id?returnUrl=@NM.ToBaseRelativePath(NM.Uri)"><input type="button" value="Edit"></a></td>
    </tr>
}
    </tbody>
   </table>

</div>
@code {

    public List<UnitWithGameSystemDetails> listOfUnitsWIthGSDetail { get; set; } = new List<UnitWithGameSystemDetails>();
    

    protected override async Task OnInitializedAsync()
    {

        var resUnits = await ULSC.GetListofAllGameUnitsWithGameSpecDetails();
        listOfUnitsWIthGSDetail = resUnits.Data;

        //StateHasChanged();
    }

    protected  async Task AddUnit()
    {
        var returnURL = @NM.ToBaseRelativePath(NM.Uri);
        NM.NavigateTo($"/addEditDeleteUnit/{-1}?returnUrl={returnURL}");
    }


}
